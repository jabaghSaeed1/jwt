{"version":3,"sources":["components/Dashboard.js","components/Register.js","components/Login.js","App.js","index.js"],"names":["Dashboard","setAuth","useState","name","setName","a","fetch","method","headers","token","localStorage","response","json","parseRes","user_name","console","error","message","useEffect","getName","className","onClick","e","preventDefault","removeItem","toast","success","logout","Register","email","password","inputs","setInputs","onChange","target","value","onSubmitForm","body","JSON","stringify","setItem","onSubmit","type","placeholder","to","Login","configure","App","isAuthenticated","setIsAuthenticated","boolean","isAuth","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"mRA6CeA,EA1CG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEhB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAF6B,4CAI7B,8BAAAC,EAAA,+EAG+BC,MAAM,mCAAqC,CAC9DC,OAAQ,MACRC,QAAS,CAACC,MAAQC,aAAaD,SAL3C,cAGcE,EAHd,gBAQ+BA,EAASC,OARxC,OAQcC,EARd,OAWQT,EAAQS,EAASC,WAXzB,kDAcQC,QAAQC,MAAM,KAAIC,SAd1B,2DAJ6B,sBAsB7BC,qBAAU,YAtBmB,mCAuBzBC,KACD,IASH,OACI,eAAC,WAAD,WACI,6CAAgBhB,KAChB,wBAAQiB,UAAW,kBAAkBC,QAAS,SAAAC,GAAC,OAVxC,SAACA,GACZA,EAAEC,iBACFb,aAAac,WAAW,SACxBvB,GAAQ,GACRwB,IAAMC,QAAQ,6BAMyCC,CAAOL,IAA1D,wB,QCgDGM,EAlFE,SAAC,GAAe,IAAd3B,EAAa,EAAbA,QAGf,EAA6BC,mBAAS,CAClC2B,MAAO,GACPC,SAAS,GACT3B,KAAK,KAHT,mBAAO4B,EAAP,KAAgBC,EAAhB,KAMOH,EAA2BE,EAA3BF,MAAQC,EAAmBC,EAAnBD,SAAW3B,EAAQ4B,EAAR5B,KAEpB8B,EAAW,SAACX,GACdU,EAAU,2BAAID,GAAL,kBAAeT,EAAEY,OAAO/B,KAAQmB,EAAEY,OAAOC,UAGhDC,EAAY,uCAAG,WAAOd,GAAP,mBAAAjB,EAAA,6DACjBiB,EAAEC,iBADe,SAIPc,EAAO,CAACR,QAAQC,WAAW3B,QAJpB,SAKUG,MAAM,sCAAwC,CACjEC,OAAQ,OACRC,QAAS,CAAC,eAAiB,oBAC3B6B,KAAOC,KAAKC,UAAUF,KARb,cAKP1B,EALO,gBAWUA,EAASC,OAXnB,QAWPC,EAXO,QAaDJ,OAERC,aAAa8B,QAAQ,QAAU3B,EAASJ,OACxCR,GAAQ,GACRwB,IAAMC,QAAQ,+BAEdzB,GAAQ,GACRwB,IAAMT,MAAMH,IApBH,kDA2BbE,QAAQC,MAAM,KAAIC,SA3BL,0DAAH,sDA+BlB,OACI,eAAC,WAAD,WACI,oBAAIG,UAAY,mBAAhB,sBACA,uBAAMqB,SAAYL,EAAlB,UACI,uBACAM,KAAK,QACLvC,KAAK,QACLwC,YAAY,QACZvB,UAAW,oBACXe,MAAQN,EACRI,SAAa,SAAAX,GAAC,OAAIW,EAASX,MAE3B,uBACAoB,KAAK,WACLvC,KAAK,WACLwC,YAAY,WACZvB,UAAW,oBACXe,MAAQL,EACRG,SAAa,SAAAX,GAAC,OAAIW,EAASX,MAE3B,uBACAoB,KAAK,OACLvC,KAAK,OACLwC,YAAY,OACZvB,UAAW,oBACXe,MAAQhC,EACR8B,SAAa,SAAAX,GAAC,OAAIW,EAASX,MAE3B,wBAAQF,UAAW,4BAAnB,uBAEJ,cAAC,IAAD,CAAMwB,GAAG,SAAT,uBCNGC,EAvED,SAAC,GAAe,IAAd5C,EAAa,EAAbA,QAEZ,EAA6BC,mBAAS,CAClC2B,MAAQ,GACRC,SAAW,KAFf,mBAAOC,EAAP,KAAgBC,EAAhB,KAKOH,EAAoBE,EAApBF,MAAQC,EAAYC,EAAZD,SAETG,EAAY,SAACX,GACfU,EAAU,2BAAID,GAAL,kBAAeT,EAAEY,OAAO/B,KAAQmB,EAAEY,OAAOC,UAGhDC,EAAY,uCAAG,WAAMd,GAAN,mBAAAjB,EAAA,6DACjBiB,EAAEC,iBADe,SAGPc,EAAO,CAACR,QAAQC,YAHT,SAIUxB,MAAM,8BAAgC,CACzDC,OAAQ,OACRC,QAAS,CAAC,eAAiB,oBAC3B6B,KAAOC,KAAKC,UAAUF,KAPb,cAIP1B,EAJO,gBAUUA,EAASC,OAVnB,QAUPC,EAVO,QAaDJ,OACRC,aAAa8B,QAAQ,QAAU3B,EAASJ,OACxCR,GAAQ,GACRwB,IAAMC,QAAQ,yBAEdzB,GAAQ,GACRwB,IAAMT,MAAMH,IAnBH,kDA0BbE,QAAQC,MAAM,KAAIC,SA1BL,0DAAH,sDA8BlB,OACI,eAAC,WAAD,WACI,oBAAIG,UAAW,mBAAf,mBACA,uBAAMqB,SAAYL,EAAlB,UACI,uBACAM,KAAK,QACLvC,KAAM,QACNwC,YAAa,QACbvB,UAAW,oBACXe,MAASN,EACTI,SAAY,SAAAX,GAAC,OAAIW,EAASX,MAE1B,uBACAoB,KAAK,WACLvC,KAAK,WACLwC,YAAY,WACZvB,UAAU,oBACVe,MAAOL,EACPG,SAAY,SAAAX,GAAC,OAAIW,EAASX,MAE1B,wBAAQF,UAAU,4BAAlB,uBAEJ,cAAC,IAAD,CAAMwB,GAAG,YAAT,0BCvDZnB,IAAMqB,YA4DSC,MA1Df,WAEE,MAAgD7C,oBAAS,GAAzD,mBAAO8C,EAAP,KAAyBC,EAAzB,KAEMhD,EAAU,SAACiD,GACfD,EAAmBC,IALR,4CAQb,8BAAA7C,EAAA,+EAG2BC,MAAM,uCAAyC,CACpEC,OAAS,MACTC,QAAU,CAACC,MAAQC,aAAaD,SALtC,cAGUE,EAHV,gBAQ2BA,EAASC,OARpC,OAQUC,EARV,OAYwBoC,GAAP,IAAbpC,GAZJ,kDAeIE,QAAQC,MAAM,KAAIC,SAftB,2DARa,sBA+Bb,OAJAC,qBAAU,YA3BG,mCA4BXiC,MAIA,cAAC,WAAD,UACE,cAAC,IAAD,UACE,qBAAK/B,UAAY,YAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAM,IACZC,OAAW,SAAAC,GAAK,OAAKP,EAGpB,cAAC,IAAD,CAAUJ,GAAG,eAFd,cAAC,EAAD,2BAAWW,GAAX,IAAkBtD,QAAWA,QAGpC,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAM,YACbC,OAAW,SAAAC,GAAK,OAAKP,EAGrB,cAAC,IAAD,CAAUJ,GAAI,MAFd,cAAC,EAAD,2BAAcW,GAAd,IAAqBtD,QAAWA,QAGtC,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAM,aACZC,OAAW,SAAAC,GAAK,OAAIP,EACpB,cAAC,EAAD,2BAAeO,GAAf,IAAsBtD,QAAWA,KAEjC,cAAC,IAAD,CAAU2C,GAAI,mBC7DjCY,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.93b4fce9.chunk.js","sourcesContent":["import React , {Fragment , useState , useEffect} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Dashboard = ({setAuth}) => {\r\n\r\n    const [name , setName ] = useState(\"\");\r\n\r\n    async function getName(){\r\n        try {\r\n            \r\n            const response = await fetch(\"http://localhost:5000/dashboard/\" , {\r\n                method: \"GET\",\r\n                headers: {token : localStorage.token}\r\n            })\r\n\r\n            const parseRes = await response.json();\r\n            // console.log(parseRes);\r\n\r\n            setName(parseRes.user_name);\r\n\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getName();\r\n    }, []);\r\n\r\n    const logout = (e) => {\r\n        e.preventDefault();\r\n        localStorage.removeItem(\"token\");\r\n        setAuth(false);\r\n        toast.success(\"Logged out Successfully !\");\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1>Dashboard  {name}</h1>\r\n            <button className= \"btn btn-primary\" onClick={e => logout(e)}>Logout</button>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Dashboard;","import React , {Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst Register = ({setAuth}) => {\r\n\r\n\r\n    const [inputs , setInputs] = useState({\r\n        email: \"\",\r\n        password:\"\",\r\n        name:\"\"\r\n    });\r\n\r\n    const {email , password , name} = inputs;\r\n\r\n    const onChange = (e) =>{\r\n        setInputs({...inputs , [e.target.name] : e.target.value});\r\n    }\r\n\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n\r\n            const body = {email , password , name};\r\n            const response = await fetch(\"http://localhost:5000/auth/register\" , {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\" : \"application/json\"},\r\n                body : JSON.stringify(body)\r\n            })\r\n\r\n            const parseRes = await response.json();\r\n\r\n            if(parseRes.token){\r\n                //console.log(parseRes);\r\n                localStorage.setItem(\"token\" , parseRes.token);\r\n                setAuth(true);\r\n                toast.success(\"Registered Successfully !\");\r\n            }else {\r\n                setAuth(false);\r\n                toast.error(parseRes);\r\n            }\r\n\r\n\r\n\r\n            \r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1 className = \"text-center my-5\">Register</h1>\r\n            <form onSubmit = {onSubmitForm}>\r\n                <input \r\n                type=\"email\" \r\n                name=\"email\"\r\n                placeholder=\"email\"\r\n                className= \"form-control my-3\"\r\n                value= {email}\r\n                onChange = { e => onChange(e) }\r\n                 />\r\n                <input \r\n                type=\"password\" \r\n                name=\"password\" \r\n                placeholder=\"password\"\r\n                className= \"form-control my-3\"\r\n                value= {password}\r\n                onChange = { e => onChange(e) }\r\n                />\r\n                <input \r\n                type=\"text\" \r\n                name=\"name\" \r\n                placeholder=\"name\"\r\n                className= \"form-control my-3\"\r\n                value= {name}\r\n                onChange = { e => onChange(e) }\r\n                />\r\n                <button className= \"btn btn-success btn-block\">Submit</button>\r\n            </form>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Register;","import React , {Fragment , useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({setAuth}) => {\r\n\r\n    const [inputs , setInputs] = useState({\r\n        email : \"\",\r\n        password : \"\"\r\n    });\r\n\r\n    const {email , password} = inputs;\r\n\r\n    const onChange  = (e) => {\r\n        setInputs({...inputs , [e.target.name] : e.target.value})\r\n    }\r\n\r\n    const onSubmitForm = async(e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = {email , password};\r\n            const response = await fetch(\"http://localhost:5000/auth/\" , {\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\" : \"application/json\"},\r\n                body : JSON.stringify(body)\r\n            })\r\n\r\n            const parseRes = await response.json();\r\n            //console.log(parseRes);\r\n\r\n            if(parseRes.token){\r\n                localStorage.setItem(\"token\" , parseRes.token);\r\n                setAuth(true);\r\n                toast.success(\"login Successfully!\")\r\n            }else {\r\n                setAuth(false);\r\n                toast.error(parseRes);\r\n            }\r\n\r\n\r\n\r\n            \r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1 className= \"text-center my-5\">Login</h1>\r\n            <form onSubmit = {onSubmitForm}>\r\n                <input \r\n                type=\"email\"\r\n                name= \"email\"\r\n                placeholder= \"email\"\r\n                className= \"form-control my-3\"\r\n                value = {email}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                className=\"form-control my-3\"\r\n                value={password}\r\n                onChange = {e => onChange(e)}\r\n                />\r\n                <button className=\"btn btn-success btn-block\">Submit</button>\r\n            </form>\r\n            <Link to=\"/register\">Register</Link>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nexport default Login;","import React , {Fragment , useState  , useEffect} from 'react';\r\nimport './App.css';\r\n\r\nimport {BrowserRouter as Router , Switch , Route , Redirect } from 'react-router-dom';\r\n\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n//components\r\nimport Dashboard from './components/Dashboard';\r\nimport Register from './components/Register';\r\nimport Login from './components/Login';\r\n\r\ntoast.configure();\r\n\r\nfunction App() {\r\n\r\n  const [isAuthenticated , setIsAuthenticated ] = useState(false);\r\n\r\n  const setAuth = (boolean) => {\r\n    setIsAuthenticated(boolean);\r\n  }\r\n\r\n  async function isAuth(){\r\n    try {\r\n\r\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\" , {\r\n        method : \"GET\",\r\n        headers : {token : localStorage.token}\r\n      })\r\n\r\n      const parseRes = await response.json();\r\n\r\n      //console.log(parseRes);\r\n\r\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n      \r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isAuth();\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      <Router>\r\n        <div className = \"container\">\r\n          <Switch>\r\n            <Route exact path =\"/\"\r\n                   render = { props => !isAuthenticated ? \r\n                   <Login {...props} setAuth = {setAuth} />\r\n                    : \r\n                    <Redirect to=\"/dashboard\"/> }  />\r\n            <Route exact path =\"/register\" \r\n                  render = { props => !isAuthenticated ? \r\n                  <Register {...props} setAuth = {setAuth} /> \r\n                  : \r\n                  <Redirect to =\"/\"/> }/>\r\n            <Route exact path =\"/dashboard\"\r\n                   render = { props => isAuthenticated ? \r\n                   <Dashboard {...props} setAuth = {setAuth} /> \r\n                   : \r\n                   <Redirect to =\"/\"/> } />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}